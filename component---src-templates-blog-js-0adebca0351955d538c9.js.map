{"version":3,"file":"component---src-templates-blog-js-0adebca0351955d538c9.js","mappings":"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","sources":["webpack://markrox.dev/./src/config/amazonProducts.js","webpack://markrox.dev/./src/templates/blog.js","webpack://markrox.dev/./src/components/TagList.jsx","webpack://markrox.dev/./src/components/Seo.jsx","webpack://markrox.dev/./src/components/AmazonSiteStripe.jsx"],"sourcesContent":["const amazonProducts = [\n  {\n    slug: \"Apple-iPad-Pro-13-Inch-Intelligence\",\n    asin: \"B0D3J97SMH\",\n    linkId: \"79f9844bf3b6cc3e874fb7e20ac61148\",\n    imageUrl: \"/images/products/71YbWlh0P8L._AC_SL1500_.jpg\",\n    name: \"Apple iPad Pro 13\\\"\"\n  },\n  {\n    slug: \"Apple-2025-MacBook-13-inch-Laptop\",\n    asin: \"B0DZD9S5GC\",\n    linkId: \"2479ce029970feb55649cdbbf211f3d9\",\n    imageUrl: \"/images/products/71cWZUr9SVL._AC_SL1500_.jpg\",\n    name: \"Apple 2025 MacBook Air 13\\\"\"\n  },\n  {\n    slug: \"Developers-Playbook-Large-Language-Security\",\n    asin: \"109816220X\",\n    linkId: \"c1299f7f8b7c92275e8e52933b8c990b\",\n    imageUrl: \"/images/products/81rI-2oN+cL._SY522_.jpg\",\n    name: \"Developers Playbook Large Language Security\"\n  }\n];\n\nexport default amazonProducts;\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Seo from '../components/Seo'\nimport TagList from \"../components/TagList\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { graphql } from 'gatsby'\nimport AmazonSiteStripe from \"../components/AmazonSiteStripe\"\nimport amazonProducts from \"../config/amazonProducts\"\n\nconst Blog = (props) => {\n\n    const post = props.data.markdownRemark\n    const postImage = post.frontmatter.postimage\n    // const seoImage = null;\n    const seoImage = postImage && postImage.src\n        ? postImage.src.childImageSharp.resize\n        : null\n    const pathName = props.location.pathname\n\n    return (\n\n        <Layout>\n            <Seo\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n                image={seoImage}\n                pathname={pathName}>\n            </Seo>\n            <section>\n                <h1 className=\"postTitle\">{post.frontmatter.title}</h1>\n                <div className=\"postedInfo\">posted on {post.frontmatter.date}  | tags: [ <TagList tags={post.frontmatter.tags} /> ]</div>\n                {/* by {post.frontmatter.author}</div> */}\n\n                {\n                    postImage && postImage.src && (\n                        <blockquote className=\"postQuote\" dangerouslySetInnerHTML={{ __html: post.frontmatter.subtitle }}></blockquote>\n                    )\n                }\n                {\n                    postImage && postImage.src && (\n                        <div className=\"postImage\">\n                            <GatsbyImage\n                                image={postImage.src.childImageSharp.gatsbyImageData}\n                                alt={postImage.alt}\n                                layout=\"fullWidth\"\n                                formats={[\"auto\", \"webp\"]}\n                            />\n                            <div className=\"overlay\">\n                                <div className=\"innerOverlayText\" dangerouslySetInnerHTML={{ __html: post.frontmatter.excerpt }}></div>\n                            </div>\n                        </div>\n                    )\n\n                }\n                <div className=\"blogBody\" dangerouslySetInnerHTML={{ __html: post.html }}></div>\n                <AmazonSiteStripe\n                    amazonProducts={amazonProducts}\n                    layout=\"horizontal\"\n                />\n                <div className=\"disclaimer\">This post and/or images used in it may have been created or enhanced using generative AI tools for clarity and organization. However, all ideas, technical work, solutions, integrations, and other aspects described here are entirely my own.</div>\n            </section>\n\n\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n        excerpt\n        id\n        frontmatter {\n            title\n            subtitle\n            excerpt\n            date(formatString: \"LL\")\n            author\n            featured\n            tags\n            postimage\n            {\n              alt\n              src {\n                absolutePath\n                childImageSharp {\n                    gatsbyImageData(\n                        layout: FULL_WIDTH\n                        placeholder: BLURRED\n                        formats: [AUTO, WEBP, AVIF]\n                    )\n                    resize(width: 1200) {\n                        src\n                        height\n                        width\n                      }\n                }\n              }\n            }\n        }\n        html\n        }\n    }\n`\n\nexport default Blog","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst TagList = ({ tags }) => {\n    return (\n        tags.map((tag, i) => {\n                let tagLink = \"/tags/\" + kebabCase(tag);\n                return <span key={i} >{(i ? ', ' : '')}<a href={tagLink}>{ tag }</a></span>\n            }\n        )\n    )\n}\n\nexport default TagList","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description = '' , lang = 'en', meta = [], image: metaImage, title, pathname }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            keywords\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image =\n    metaImage && metaImage.src\n      ? `${site.siteMetadata.siteUrl}${metaImage.src}`\n      : null\n  const canonical = pathname ? `${site.siteMetadata.siteUrl}${pathname}` : null\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} - %s`}\n      link={\n        canonical\n          ? [\n              {\n                rel: \"canonical\",\n                href: canonical,\n              },\n            ]\n          : []\n      }\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: \"keywords\",\n          content: site.siteMetadata.keywords.join(\",\"),\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          metaImage\n            ? [\n                {\n                  property: \"og:image\",\n                  content: image,\n                },\n                {\n                  property: \"og:image:width\",\n                  content: metaImage.width,\n                },\n                {\n                  property: \"og:image:height\",\n                  content: metaImage.height,\n                },\n                {\n                  name: \"twitter:card\",\n                  content: \"summary_large_image\",\n                },\n              ]\n            : [\n                {\n                  name: \"twitter:card\",\n                  content: \"summary\",\n                },\n              ]\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  image: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }),\n  pathname: PropTypes.string,\n}\n\nexport default Seo\n","import React from 'react'\nimport \"../styles/ads.scss\"\n\nconst AmazonSiteStripeWIP = ({\n    amazonProducts = [],\n    tag = \"markroxdev-20\",\n    layout = \"vertical\", // or \"horizontal\"\n}) => {\n    // Helper to build the Amazon URL for each product\n    const buildUrl = (product) => {\n        if (product.url) return product.url;\n        if (product.slug && product.asin && product.linkId) {\n            return `https://www.amazon.com/${product.slug}/dp/${product.asin}?th=1&linkCode=ll1&tag=${tag}&linkId=${product.linkId}&language=en_US&ref_=as_li_ss_tl`;\n        }\n        return \"https://www.amazon.com/b?node=53629917011&linkCode=ll2&tag=markroxdev-20&language=en_US&ref_=as_li_ss_tl\";\n    };\n\n    const containerStyle = layout === \"horizontal\"\n        ? { display: \"flex\", gap: 24, flexDirection: \"row\" }\n        : { display: \"flex\", gap: 24, flexDirection: \"column\" };\n\n    return (\n        <section>\n            <h1 className=\"sectionTitle\">Recommended Products</h1>\n            <div style={{ padding: \"20px\", borderRadius: \"8px\", border: \"1px solid #ccc\", backgroundColor: \"#282828\" }}>\n                <div style={containerStyle}>\n                    {amazonProducts.map((product, idx) => (\n                        <a\n                            key={product.asin || idx}\n                            href={buildUrl(product)}\n                            target=\"_blank\"\n                            rel=\"nofollow sponsored\"\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                                width: 240,\n                                height: 340, // adjust as needed for your image + text\n                                margin: 10,\n                                textDecoration: \"none\",\n                                border: \"1px solid #ccc\",\n                                borderRadius: 4,\n                                boxSizing: \"border-box\",\n                                background: \"#282828\",\n                            }}\n                        >\n                            <div style={{ padding: 50, flex: \"0 0 auto\" }}>\n                                <img\n                                    src={product.imageUrl || \"https://via.placeholder.com/120x240?text=Amazon+Product\"}\n                                    alt={product.name || \"Product Name\"}\n                                    style={{ display: \"block\", margin: \"0 auto\", maxWidth: \"100%\", maxHeight: \"100%\" }}\n                                />\n                            </div>\n                            <p style={{ margin: \"0 0 20px 0\", flex: \"0 0 auto\", padding: \"0 5px\", textAlign: \"center\" }}>\n                                {product.name || \"Product Name\"}\n                            </p>\n                        </a>\n                    ))}\n                </div>\n                <p>As an Amazon Associate, I earn from qualifying purchases.</p>\n            </div>\n        </section>\n    );\n};\n\nconst AmazonSiteStripe = (props) => {\n    return <></>;\n};\n\nexport default AmazonSiteStripe\n"],"names":["slug","asin","linkId","imageUrl","name","props","post","data","markdownRemark","postImage","frontmatter","postimage","seoImage","src","childImageSharp","resize","pathName","location","pathname","React","Layout","Seo","title","description","excerpt","image","className","date","TagList","tags","dangerouslySetInnerHTML","__html","subtitle","GatsbyImage","gatsbyImageData","alt","layout","formats","html","AmazonSiteStripe","amazonProducts","_ref","map","tag","i","tagLink","kebabCase","key","href","lang","meta","metaImage","site","useStaticQuery","metaDescription","siteMetadata","siteUrl","canonical","Helmet","htmlAttributes","titleTemplate","link","rel","content","keywords","join","property","author","concat","width","height"],"sourceRoot":""}