{"version":3,"file":"component---src-templates-tags-js-eb1dd04fa644403be044.js","mappings":"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","sources":["webpack://markrox.dev/./src/components/Pager.jsx","webpack://markrox.dev/./src/config/amazonProducts.js","webpack://markrox.dev/./src/components/TagList.jsx","webpack://markrox.dev/./src/components/Seo.jsx","webpack://markrox.dev/./src/components/AmazonSiteStripe.jsx","webpack://markrox.dev/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Pager = ({isFirst, isLast, prevPage, nextPage, currentPage, numPages}) => {\n\n    return (\n        <ul className='post-pager'\n            style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            alignItems: 'center',\n            listStyle: 'none',\n            paddingInlineStart: 0,\n          }}>\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\" style={{marginRight: 20}}>\n              ← Previous Page\n            </Link>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li\n              key={`pagination-number${i + 1}`}\n              style={{\n                margin: 20,\n              }}\n            >\n              <Link\n                to={`/${i === 0 ? \"\" : i + 1}`}\n                style={{\n                  textDecoration: \"none\",\n                  color: i + 1 === currentPage ? \"#ffffff\" : \"\",\n                  background: i + 1 === currentPage ? \"#007acc\" : \"\",\n                }}\n              >\n                {i + 1}\n              </Link>\n            </li>\n          ))}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\" style={{marginLeft: 20}}>\n              Next Page →\n            </Link>\n          )}\n        </ul>\n    )\n}\n\nexport default Pager","const amazonProducts = [\n  {\n    slug: \"Apple-iPad-Pro-13-Inch-Intelligence\",\n    asin: \"B0D3J97SMH\",\n    linkId: \"79f9844bf3b6cc3e874fb7e20ac61148\",\n    imageUrl: \"/images/products/71YbWlh0P8L._AC_SL1500_.jpg\",\n    name: \"Apple iPad Pro 13\\\"\"\n  },\n  {\n    slug: \"Apple-2025-MacBook-13-inch-Laptop\",\n    asin: \"B0DZD9S5GC\",\n    linkId: \"2479ce029970feb55649cdbbf211f3d9\",\n    imageUrl: \"/images/products/71cWZUr9SVL._AC_SL1500_.jpg\",\n    name: \"Apple 2025 MacBook Air 13\\\"\"\n  },\n  {\n    slug: \"Developers-Playbook-Large-Language-Security\",\n    asin: \"109816220X\",\n    linkId: \"c1299f7f8b7c92275e8e52933b8c990b\",\n    imageUrl: \"/images/products/81rI-2oN+cL._SY522_.jpg\",\n    name: \"Developers Playbook Large Language Security\"\n  }\n];\n\nexport default amazonProducts;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst TagList = ({ tags }) => {\n    return (\n        tags.map((tag, i) => {\n                let tagLink = \"/tags/\" + kebabCase(tag);\n                return <span key={i} >{(i ? ', ' : '')}<a href={tagLink}>{ tag }</a></span>\n            }\n        )\n    )\n}\n\nexport default TagList","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description = '' , lang = 'en', meta = [], image: metaImage, title, pathname }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            keywords\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image =\n    metaImage && metaImage.src\n      ? `${site.siteMetadata.siteUrl}${metaImage.src}`\n      : null\n  const canonical = pathname ? `${site.siteMetadata.siteUrl}${pathname}` : null\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} - %s`}\n      link={\n        canonical\n          ? [\n              {\n                rel: \"canonical\",\n                href: canonical,\n              },\n            ]\n          : []\n      }\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: \"keywords\",\n          content: site.siteMetadata.keywords.join(\",\"),\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          metaImage\n            ? [\n                {\n                  property: \"og:image\",\n                  content: image,\n                },\n                {\n                  property: \"og:image:width\",\n                  content: metaImage.width,\n                },\n                {\n                  property: \"og:image:height\",\n                  content: metaImage.height,\n                },\n                {\n                  name: \"twitter:card\",\n                  content: \"summary_large_image\",\n                },\n              ]\n            : [\n                {\n                  name: \"twitter:card\",\n                  content: \"summary\",\n                },\n              ]\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  image: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n  }),\n  pathname: PropTypes.string,\n}\n\nexport default Seo\n","import React from 'react'\nimport \"../styles/ads.scss\"\n\nconst AmazonSiteStripeWIP = ({\n    amazonProducts = [],\n    tag = \"markroxdev-20\",\n    layout = \"vertical\", // or \"horizontal\"\n}) => {\n    // Helper to build the Amazon URL for each product\n    const buildUrl = (product) => {\n        if (product.url) return product.url;\n        if (product.slug && product.asin && product.linkId) {\n            return `https://www.amazon.com/${product.slug}/dp/${product.asin}?th=1&linkCode=ll1&tag=${tag}&linkId=${product.linkId}&language=en_US&ref_=as_li_ss_tl`;\n        }\n        return \"https://www.amazon.com/b?node=53629917011&linkCode=ll2&tag=markroxdev-20&language=en_US&ref_=as_li_ss_tl\";\n    };\n\n    const containerStyle = layout === \"horizontal\"\n        ? { display: \"flex\", gap: 24, flexDirection: \"row\" }\n        : { display: \"flex\", gap: 24, flexDirection: \"column\" };\n\n    return (\n        <section>\n            <h1 className=\"sectionTitle\">Recommended Products</h1>\n            <div style={{ padding: \"20px\", borderRadius: \"8px\", border: \"1px solid #ccc\", backgroundColor: \"#282828\" }}>\n                <div style={containerStyle}>\n                    {amazonProducts.map((product, idx) => (\n                        <a\n                            key={product.asin || idx}\n                            href={buildUrl(product)}\n                            target=\"_blank\"\n                            rel=\"nofollow sponsored\"\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                                width: 240,\n                                height: 340, // adjust as needed for your image + text\n                                margin: 10,\n                                textDecoration: \"none\",\n                                border: \"1px solid #ccc\",\n                                borderRadius: 4,\n                                boxSizing: \"border-box\",\n                                background: \"#282828\",\n                            }}\n                        >\n                            <div style={{ padding: 50, flex: \"0 0 auto\" }}>\n                                <img\n                                    src={product.imageUrl || \"https://via.placeholder.com/120x240?text=Amazon+Product\"}\n                                    alt={product.name || \"Product Name\"}\n                                    style={{ display: \"block\", margin: \"0 auto\", maxWidth: \"100%\", maxHeight: \"100%\" }}\n                                />\n                            </div>\n                            <p style={{ margin: \"0 0 20px 0\", flex: \"0 0 auto\", padding: \"0 5px\", textAlign: \"center\" }}>\n                                {product.name || \"Product Name\"}\n                            </p>\n                        </a>\n                    ))}\n                </div>\n                <p>As an Amazon Associate, I earn from qualifying purchases.</p>\n            </div>\n        </section>\n    );\n};\n\nconst AmazonSiteStripe = (props) => {\n    return <></>;\n};\n\nexport default AmazonSiteStripe\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/Seo\"\nimport Pager from \"../components/Pager\"\nimport TagList from \"../components/TagList\"\nimport PropTypes from \"prop-types\"\nimport AmazonSiteStripe from \"../components/AmazonSiteStripe\"\nimport amazonProducts from \"../config/amazonProducts\"\n\n// Components\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Link, graphql } from \"gatsby\"\n\nconst Tags = ({ pageContext, data }) => {\n    const { tag } = pageContext\n    const { edges, totalCount } = data.allMarkdownRemark\n    const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\n        } tagged with \"${tag}\"`\n    // const { currentPage, numPages } = this.props.pageContext\n    // const isFirst = currentPage === 1\n    // const isLast = currentPage === numPages\n    // const prevPage = currentPage - 1 === 1 ? \"/\" : \"/\" + (currentPage - 1).toString()\n    // const nextPage = \"/\" + (currentPage + 1).toString()\n\n    let pager;\n    // if (numPages > 1) {\n    //     pager = <Pager\n    //         isFirst={isFirst}\n    //         isLast={isLast}\n    //         prevPage={prevPage}\n    //         nextPage={nextPage}\n    //         currentPage={currentPage}\n    //         numPages={numPages}\n    //     />;\n    // }\n    return (\n        <Layout>\n            <Seo title={tag} />\n            <section>\n                <h1><FontAwesomeIcon icon={['fas', 'tags']} />&nbsp;&nbsp;{tagHeader}</h1>\n                <div className=\"flexbox\">\n                    {edges.map(({ node }, i) => {\n\n                        const postImage = node.frontmatter.postimage\n\n                        return (\n                            <div key={node.fields.slug + i.toString()}>\n                                <Link to={node.fields.slug}><h1 className=\"postTitle\">{node.frontmatter.title}</h1></Link>\n                                <div className=\"postedInfo\">posted on {node.frontmatter.date} | tags: [ <TagList tags={node.frontmatter.tags} /> ]</div>\n                                <Link to={node.fields.slug}>\n                                    {postImage && postImage.src && (\n                                        <div className=\"postImage\">\n                                            <GatsbyImage\n                                                image={postImage.src.childImageSharp.gatsbyImageData}\n                                                alt={postImage.alt}\n                                                layout=\"fullWidth\"\n                                                formats={[\"auto\", \"webp\"]}\n                                            />\n                                            <div className=\"overlay\">\n                                                <div className=\"innerOverlayText\" dangerouslySetInnerHTML={{ __html: node.frontmatter.excerpt }}></div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </Link>\n                            </div>\n                        )\n                    })}\n                    {pager}\n                </div>\n                {/* <ul>\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul> */}\n                {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n                {/* <Link to=\"/ta`gs\">All tags</Link> */}\n            </section>\n            <AmazonSiteStripe\n                amazonProducts={amazonProducts}\n                layout=\"horizontal\"\n            />\n        </Layout>\n    )\n}\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                        }),\n                        fields: PropTypes.shape({\n                            slug: PropTypes.string.isRequired,\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n}\n\nexport const query = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: {frontmatter: {date: DESC}}\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          frontmatter {\n              title\n              subtitle\n              date(formatString: \"LL\")\n              author\n              excerpt\n              featured\n              tags\n              postimage\n              {\n                alt\n                src {\n                  absolutePath\n                  childImageSharp {\n                      gatsbyImageData(\n                        layout: FULL_WIDTH\n                        placeholder: BLURRED\n                        formats: [AUTO, WEBP, AVIF]\n                      )\n                  }\n                }\n              }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\nexport default Tags\n"],"names":["_ref","isFirst","isLast","prevPage","nextPage","currentPage","numPages","React","className","style","display","flexWrap","alignItems","listStyle","paddingInlineStart","Link","to","rel","marginRight","Array","from","length","_","i","key","margin","textDecoration","color","background","marginLeft","slug","asin","linkId","imageUrl","name","tags","map","tag","tagLink","kebabCase","href","description","lang","meta","image","metaImage","title","pathname","site","useStaticQuery","metaDescription","siteMetadata","src","siteUrl","canonical","Helmet","htmlAttributes","titleTemplate","link","content","keywords","join","property","author","concat","width","height","props","pageContext","data","edges","totalCount","allMarkdownRemark","tagHeader","Layout","Seo","FontAwesomeIcon","icon","_ref2","node","postImage","frontmatter","postimage","fields","toString","date","TagList","GatsbyImage","childImageSharp","gatsbyImageData","alt","layout","formats","dangerouslySetInnerHTML","__html","excerpt","pager","AmazonSiteStripe","amazonProducts"],"sourceRoot":""}